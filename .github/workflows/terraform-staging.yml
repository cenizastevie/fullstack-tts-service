name: Terraform Staging

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "us-east-1"
      TF_VAR_mysqlpassword: ${{ secrets.MYSQL_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Initialize Terraform
      working-directory: terraform/staging
      run: terraform init 

    - name: Plan Terraform
      working-directory: terraform/staging
      run: terraform plan 

    - name: Apply Terraform
      if: github.event_name == 'push'
      working-directory: terraform/staging
      run: terraform apply  -auto-approve

  destroy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "us-east-1"
      TF_VAR_mysqlpassword: ${{ secrets.MYSQL_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Initialize Terraform
      working-directory: terraform/staging
      run: terraform init 

    - name: Destroy Terraform
      if: github.event_name == 'workflow_dispatch'
      working-directory: terraform/staging
      run: terraform destroy  -auto-approve