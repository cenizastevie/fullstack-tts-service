# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration files
file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file as well as the filename.
# string value is passed to datetime.datetime.now()
# leave blank for localtime, utc, or a timezone string such as "US/Eastern" or "Europe/Paris".
# If specified, requires the python-dateutil library.
# timezone =

# max length of characters to apply to the "slug" field
# slug_length = 40

# set to 'true' to run the environment during the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without a source .py file to be detected as revisions
# sourceless = false

# version location specification; this defaults
# to alembic/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path.
# The path separator used here should be the separator specified by "version_locations_separator".
# version_locations = %(here)s/bar:%(here)s/bat:alembic/versions

# version path separator; this defaults to os.pathsep (semi-colon on Windows, colon on Unix).
# version_locations_separator = :

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8f

sqlalchemy.url = %(DATABASE_URL)s

[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples
# hooks =

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks.black = console_scripts: black
# hooks.black.options = -l 79

# format using "autopep8" - use the console_scripts runner, against the "autopep8" entrypoint
# hooks.autopep8 = console_scripts: autopep8
# hooks.autopep8.options = -aa

# format using "isort" - use the console_scripts runner, against the "isort" entrypoint
# hooks.isort = console_scripts: isort
# hooks.isort.options = -l 79

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_sqlalchemy]
level = WARN
handlers = console
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers = console
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s